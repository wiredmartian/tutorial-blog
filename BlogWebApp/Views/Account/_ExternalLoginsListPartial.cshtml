@model BlogWebApp.Models.ExternalLoginListViewModel
@using Microsoft.Owin.Security

<style>
    button {
        width: 100%;
        margin: 10px;
    }
    button > i.fa{
        font-size: 20px;
    }
</style>
<div class="col s12">
    @{
        var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
        if (loginProviders.Count() == 0)
        {
            <div>
                <p>
                    There are no external authentication services configured. See <a href="https://go.microsoft.com/fwlink/?LinkId=403804">this article</a>
                    for details on setting up this ASP.NET application to support logging in via external services.
                </p>
            </div>
        }
        else
        {
            using (Html.BeginForm("ExternalLogin", "Account", new { ReturnUrl = Model.ReturnUrl }))
            {
                @Html.AntiForgeryToken()
                <div id="socialLoginList">
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        if (p.AuthenticationType.Equals("Google"))
                        {
                            <div class="col s12">
                                <button class="btn-floating red right" type="submit" title="Sign in with @p.AuthenticationType" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType">
                                    <i class="fa fa-google"></i>
                                </button>
                            </div>
                        }
                        if (p.AuthenticationType.Equals("Microsoft"))
                        {
                            <div class="col s12">
                                <button class="btn-floating blue right" type="submit" title="Sign in with @p.AuthenticationType" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType">
                                    <i class="fa fa-windows"></i>
                                </button>
                            </div>
                        }
                    }
                </div>
            }
        }
    }
</div>
